/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
 #define QWERTY  0
 #define BT      1
 #define NUM     2
 #define NAV     3
 #define SYM     4
// -----------------




/ {
     behaviors {
         /* Behaviors from your first keymap, without labels */
         hm: homerow_mods {
             compatible = "zmk,behavior-hold-tap";
             #binding-cells = <2>;
             tapping-term-ms = <200>;
             quick-tap-ms = <0>;
             flavor = "balanced";
             bindings = <&kp>, <&kp>;
         };
 
         hmn: homerow_nav {
             compatible = "zmk,behavior-hold-tap";
             #binding-cells = <2>;
             tapping-term-ms = <200>;
             quick-tap-ms = <0>;
             flavor = "balanced";
             bindings = <&mo>, <&kp>;
         };
     };

	combos {
		compatible = "zmk,combos";
		// both right thumb keys
		combo_accent {
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&mo 1>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		qwerty {
			label = "Base";
             bindings = <
                 &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
                 &hmn 1 A    &hm LALT S    &hm LCTRL D   &hm LSHFT F   &kp G             &kp H         &hm LSHFT J   &hm LCTRL K   &hm LALT L   &hm LGUI SQT
                 &kp Z       &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA    &kp DOT     &lt 4 FSLH
                             &kp ESC      &kp SPACE   &lt 3 ENTER   &lt 2 BACKSPACE
             >;
		};

		nav {
			label = "Nav";
			bindings = <
                 &none       &none         &none         &none          &none         &kp PG_UP    &kp HOME    &kp UP      &kp END     &kp PRINTSCREEN
                 &none       &kp LEFT_ALT   &kp LCTRL     &kp LEFT_SHIFT  &none        &kp PG_DN    &kp LEFT    &kp DOWN   &kp RIGHT   &kp TAB
                 &none       &kp LC(X)      &kp LC(C)     &kp LC(V)       &none        &none       &none       &none      &none     &none
                              &none         &kp LEFT_GUI   &none       &kp DELETE
			>;
		};

		num {
			label = "Num";
			bindings = <
                 &kp LBKT    &kp N7    &kp N8    &kp N9    &kp RBKT    &none    &none    &none    &none    &none
                 &kp SEMI    &kp N4    &kp N5    &kp N6    &kp EQUAL   &none    &none    &none    &none    &none
                 &kp GRAVE   &kp N1    &kp N2    &kp N3    &kp BSLH    &none    &none    &none    &none    &none
                               &kp N0    &kp MINUS   &none    &none
			>;
		};

		sym {
			label = "Sym";
			bindings = <
                 &kp LBRC    &kp AMPS    &kp STAR    &kp LPAR    &kp RBRC    &none    &none    &none    &none    &none
                 &kp COLON   &kp DOLLAR  &kp PRCNT   &kp CARET   &kp PLUS    &none    &none    &none    &none    &none
                 &kp TILDE   &kp EXCL    &kp AT      &kp POUND   &kp PIPE    &none    &none    &none    &none    &none
                             &kp LPAR   &kp RPAR  &none    &none
			>;
		};

		// Low frequency symbols.
		bt {
			label = "Blu";
			bindings = <
                 &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_CLR_ALL    &trans    &trans    &trans    &trans    &trans
                 &bt BT_CLR      &trans       &trans       &trans       &trans           &trans    &trans    &trans    &trans    &trans
                 &studio_unlock        &trans       &trans       &trans       &trans           &trans    &trans    &trans    &trans    &trans
                               &trans       &trans       &trans         &trans
			>;
		};
	};
};
